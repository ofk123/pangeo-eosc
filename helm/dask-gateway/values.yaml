dask-gateway:
  enabled: true
  gateway:
    auth:
      jupyterhub:
        apiToken: token1 # replace this 
        apiUrl: http://proxy-public/hub/api
      type: jupyterhub
    extraConfig:
      dasklimits: |
        c.ClusterConfig.cluster_max_cores = 6
        c.ClusterConfig.cluster_max_memory = "24 G"
        c.ClusterConfig.cluster_max_workers = 4
        c.ClusterConfig.idle_timeout = 1800
      optionHandler: |
        from dask_gateway_server.options import Options, Integer, Float, String

        def options_handler(options):
          if ":" not in options.image:
            raise ValueError("When specifying an image you must also provide a tag")
          return {
            "worker_cores": options.worker_cores,
            "worker_memory": int(options.worker_memory * 2 ** 30),
            "image": options.image,
          }

        c.Backend.cluster_options = Options(
          Integer("worker_cores", default=1, min=1, max=4, label="Worker Cores"),
          Float("worker_memory", default=2, min=2, max=8, label="Worker Memory (GiB)"),
          String("image", default="pangeo/pangeo-notebook:2022.08.19", label="Image"),
          handler=options_handler,
        )
    prefix: /services/dask-gateway
    backend:
      scheduler:
        extraContainerConfig:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
      worker:
        extraContainerConfig:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
  traefik:
    service:
      type: ClusterIP

dask-kubernetes:
  enabled: false

rbac:
  enabled: true

jupyterhub:
  hub:
    config:
      Authenticator:
        admin_users:
        - admin
      JupyterHub:
        admin_access: true
        authenticator_class: nativeauthenticator.NativeAuthenticator          
    services:
      dask-gateway:
        apiToken: token1 # replace this
    networkPolicy:
      interNamespaceAccessLabels: "accept"
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/proxy-body-size: "1g"
    enabled: true
    hosts:
      - pangeo.vm.fedcloud.eu # replace this with your DNS name
    tls:
      - hosts:
        - pangeo.vm.fedcloud.eu # replace this with your DNS name
        secretName: pangeo.vm.fedcloud.eu # replace this with your DNS name
  proxy:
    secretToken: token2 # replace this 
    service:
      type: ClusterIP
  singleuser:
    networkPolicy:
      enabled: false
    cloudMetadata:
      blockWithIptables: false
    cpu:
      guarantee: 1
      limit: 2
    defaultUrl: /lab
    extraEnv:
      DASK_GATEWAY__CLUSTER__OPTIONS__IMAGE: '{JUPYTER_IMAGE_SPEC}'
    image:
      name: pangeo/pangeo-notebook
      tag: 2022.08.19
    memory:
      guarantee: 2G
      limit: 4G
    startTimeout: 600
    storage:
      capacity: 10Gi
    extraPodConfig:
      securityContext:
        fsGroupChangePolicy: OnRootMismatch
  scheduling:
    userScheduler:
      enabled: false
  prePuller:
    hook:
      enabled: false
    continuous:
      enabled: false  
